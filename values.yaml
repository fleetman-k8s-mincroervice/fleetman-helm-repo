# Default values for fleetman.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
environment:
  value: production-microservice

nameOverride: ""
fullnameOverride: "fleetman"

imagePullSecrets:
- name: jfrog-docker-reg

# Fleetman-Queue
queue:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/k8s-fleetman-queue
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: release2
  #service
  service:
    type: ""
    port: 8161
    portEndpoint: 61616
    nodePort: 30061

# Fleetman-simulator
simulator:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/k8s-fleetman-position-simulator
    pullPolicy: IfNotPresent
    tag: release2

# Fleetman-position-tracker
tracker:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/k8s-fleetman-position-tracker
    pullPolicy: IfNotPresent
    tag: release3
  service:
    type: ""
    port: 8080
    nodePort: ""
# Fleetman-position-tracker
api:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/k8s-fleetman-api-gateway
    pullPolicy: IfNotPresent
    tag: release2
  service:
    type: ""
    port: 8080
    nodePort: ""
#Web Frontend
web:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/k8s-fleetman-webapp-angular
    pullPolicy: IfNotPresent
    tag: release2
  service:
    type: "NodePort"
    port: 80
    nodePort: 30080

#Mongo-DB
mongo:
  image:
    repository: fleetman.jfrog.io/docker/richardchesterwood/mongo
    pullPolicy: IfNotPresent
    tag: 3.6.5-jessie
    mountpath: /data/db
    volumename: mongodb
    readonly: false
  service:
    type: ""
    port: 27017
    nodePort: ""
  pvc:
    accessModes: ReadWriteOnce
    storage: 2Gi
  storageclass:
    storageclassname: fleetman-mongo-storage-class
    provisioner: aws-ebs
    parameters:
      type: gp2
      fsType: ext4
    reclaimPolicy: Delete
    volumeBindingMode: WaitForFirstConsumer
    resize: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

#fleetman-queue-admin-console
service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: admin-console
readinessProbe:
  httpGet:
    path: /
    port: admin-console

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
