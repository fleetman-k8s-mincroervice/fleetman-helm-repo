#Fleetman Queue
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-queue
  labels:
    {{- include "fleetman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.queue.image.repository }}:{{ .Values.queue.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.queue.image.pullPolicy }}
          ports:
            - name: admin-console
              containerPort: {{ .Values.queue.service.port }}
              protocol: TCP

            - name: endpoint
              containerPort: {{ .Values.queue.service.portEndpoint }}
              protocol: TCP        
          resources:
              requests:
                cpu: {{- default "100m" .Values.queue.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.queue.resources.requests.memory }}
              limit:
                cpu: {{- default "100m" .Values.queue.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.queue.resources.requests.memory }}              

---
#Fleetman Simulator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-simulator
  labels:
    {{- include "fleetman.simulator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.simulator.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.simulator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-simulator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.simulator.image.repository }}:{{ .Values.simulator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.simulator.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "fleetman.fullname" . }}-configmap
          resources:
              requests:
                cpu: {{- default "100m" .Values.simulator.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.simulator.resources.requests.memory }}
              limit:
                cpu: {{- default "100m" .Values.simulator.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.simulator.resources.requests.memory }}
---
#Fleetman position tracker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-position-tracker
  labels:
    {{- include "fleetman.tracker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.tracker.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.tracker.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-position-tracker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.tracker.image.repository }}:{{ .Values.tracker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.simulator.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "fleetman.fullname" . }}-configmap
          ports:
            - name: tracker
              containerPort: {{ .Values.tracker.service.port }}
              protocol: TCP
          resources:
              requests:
                cpu: {{- default "100m" .Values.tracker.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.tracker.resources.requests.memory }}
              limit:
                cpu: {{- default "100m" .Values.tracker.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.tracker.resources.requests.memory }}
---
#Fleetman- API gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-api-gateway
  labels:
    {{- include "fleetman.api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.api.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api-gateway
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.simulator.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "fleetman.fullname" . }}-configmap
          ports:
            - name: api-gateway
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          resources:
              requests:
                cpu: {{- default "100m" .Values.api.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.api.resources.requests.memory }}
              limit:
                cpu: {{- default "100m" .Values.api.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.api.resources.requests.memory }}

---
#Fleetman web angular
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-web-angular
  labels:
    {{- include "fleetman.web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.web.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.web.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.simulator.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "fleetman.fullname" . }}-configmap
          ports:
            - name: webapp
              containerPort: {{ .Values.web.service.port }}
              protocol: TCP
          resources:
              requests:
                cpu: {{- default "100m" .Values.web.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.web.resources.requests.memory }}
              limit:
                cpu: {{- default "100m" .Values.web.resources.requests.cpu }}
                memmory: {{- default "100Mi" .Values.web.resources.requests.memory }}

---
#Fleetman Mongo db
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fleetman.fullname" . }}-mangodb
  labels:
    {{- include "fleetman.mongo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fleetman.mongo.selectorLabels" . | nindent 6 }}
  strategy:
   type: {{ .Values.strategy.type }}
   {{- if eq .Values.strategy.type "RollingUpdate" }}
   rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
   {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fleetman.mongo.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fleetman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
          ports:
            - name: mongo
              containerPort: {{ .Values.mongo.service.port }}
              protocol: TCP
          resources:
              requests:
                cpu: {{- default "250m" .Values.mongo.resources.requests.cpu }}
                memmory: {{- default "500Mi" .Values.mongo.resources.requests.memory }}
              limit:
                cpu: {{- default "250m" .Values.mongo.resources.requests.cpu }}
                memmory: {{- default "500Mi" .Values.mongo.resources.requests.memory }}            
          {{- with .Values.mongo.image }}    
          volumeMounts:
            - mountPath: {{ .mountpath }}
              name: {{ .volumename }}
              readOnly: {{ .readonly }}
          {{- end }}    
      volumes:
        - name: {{ .Values.mongo.image.volumename }}
          persistentVolumeClaim: 
            claimName: {{ include "fleetman.fullname" . }}-mongo-pvc        
                          